{"name":"Spring-boot-mvc-complete-example","tagline":"spring boot mvc complete example integration and unit test with @config classes","body":"Spring Maven Java 1.8\r\n=======================\r\n\r\n\r\nNEW SPRING BOOT MVC APP CREATED, ENJOY IT  \r\n\r\n**Important!!!!! First of all you have to install with \"mvn install\" modules \"mylab-parent-pom\" and after \"mvn install\" of module \"mylab-core\".**\r\n\r\nrun spring-boot-mvc-web-example module with maven  \"mvn spring-boot:run\" and access to http://localhost:9090/pizza\r\nand user: \"admin@ole.com\" and password \"admin@ole.com\".You can create other users with ROLE_USER at add user left menu\r\noption.\r\n\r\n- Spring boot MVC with Spring Security Access\r\n- I18n\r\n- Responsive Bootstrap css witn Tiles 3\r\n- Password encoding with Bcrypt  [BCRYPT password encoding](http://www.baeldung.com/spring-security-registration-password-encoding-bcrypt \"BCRYPT password encoding\") \r\n- Unit Testing and Integration Testing with spring-boot-starter-test dependency (all dependecies are transitive like mockito junit etc...)\r\n\r\n\r\n------------------------------------------------------------------------------------------------------\r\n\r\nIf you want to access to Rest Service with Spring boot module \"spring-boot-mvc\" first run mvn spring-boot:run:\r\n\r\n- http://localhost:9090/base (get list of all bases)\r\n- http://localhost:9090/base/1 (get base info with id=1)\r\n- http://localhost:9090/base/1 (delete base info with id=1)\r\n- http://localhost:9090/base (post create new base sending json info. Example \"name\":\"rolling pizza\" )\r\n- http://localhost:9090/base (update update existing base sending json info. Example {\"name\":\"rolling pizza 2\",\"id\":1})\r\n\r\nWhen you run Spring boot app Spring actuator add features to monitore your services:\r\n\r\n- (get) http://localhost:9091/manage/metrics (Spring Boot Actuator includes a metrics service with \r\n“gauge” and “counter” support. A “gauge” records a single value; and a “counter” records a delta \r\n(an increment or decrement). Metrics for all HTTP requests are automatically \r\nrecorded, so if you hit the metrics endpoint should see a sensible response.)\r\n- (get) http://localhost:9091/manage/health (you can check if your app is available)\r\n- (get) http://localhost:9091/manage/mappings (list of your app HTTP endpoints)\r\n- (post) http://localhost:9091/manage/shutdown (list of your app HTTP endpoints)\r\n\r\n![Spring Actuator values](/images/Spring_Actuator_EndPoints.png?raw=true \"Spring Actuator values\")\r\n\r\n\r\nMore info about Spring Actuator at: [Spring Actuator](https://github.com/spring-projects/spring-boot/tree/master/spring-boot-actuator \"Spring Actuator\")\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}