{
  "name": "Spring-boot-mvc-complete-example",
  "tagline": "spring boot mvc complete example integration and unit test with @config classes",
  "body": "## Spring Boot Maven Java 1.8  (Spring MVC jsp and tiles, Spring Data Rest, Jenkins 2 ready to use with full support to Maven and Gradle)\r\n\r\n[![Coverage Status](https://coveralls.io/repos/cristianprofile/spring-boot-mvc-complete-example/badge.svg)](https://coveralls.io/r/cristianprofile/spring-boot-mvc-complete-example)  [![Build Status](https://travis-ci.org/cristianprofile/spring-boot-mvc-complete-example.svg?branch=develop)](https://travis-ci.org/cristianprofile/spring-boot-mvc-complete-example)\r\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/cristianprofile/spring-boot-mvc-complete-example?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\r\n\r\nIf you don`t have  gradle or maven in your computer you can use gradlew to be able to run the project\r\n\r\n```\r\ngradle wrapper (run Gradle wrapper)\r\n\r\nAfter this operation you can run every Gradle command of this guide with \r\n\r\n./gradlew xxxxxtask (Unix, Linux)\r\ngradlew.bat XXXtask  (Windows)\r\n\r\nExample\r\n\r\n./gradlew clean compile (Unix, Linux)\r\ngradlew.bat clean compile (Windows)\r\n\r\n```\r\n\r\n\r\nYou can build this project with Maven or Gradle. Here you have several snippets about how to use them: \r\n\r\n```\r\nmvn clean install (install jar to your local m2 )\r\nmvn spring-boot:run (run web app modules)\r\ngradle buid (build modules)\r\ngradle bootRun (run web app modules)\r\n```\r\n\r\n\r\n**Important!!!!!If you use Maven First of all you have to install with \"mvn install\" modules \"mylab-parent-pom\" and after \"mvn install\" of module \"mylab-core\".**\r\n\r\n\r\n## Spring Boot mvc web with tiles app\r\n\r\nrun spring-boot-mvc-web-example module with maven  \"mvn spring-boot:run\" (if you want to use Gradle run \"gradle bootRun\" into spring-boot-mvc-web-example ) and access to http://localhost:9090/pizza\r\nand user: \"admin@ole.com\" and password \"admin@ole.com\".You can create other users with ROLE_USER at add user left menu\r\noption.\r\n\r\n- Spring boot MVC with Spring Security Access\r\n- I18n\r\n- Responsive Bootstrap css witn Tiles 3\r\n- Password encoding with Bcrypt  [BCRYPT password encoding](http://www.baeldung.com/spring-security-registration-password-encoding-bcrypt \"BCRYPT password encoding\") \r\n- Unit Testing and Integration Testing with spring-boot-starter-test dependency (all dependecies are transitive like mockito junit etc...)\r\n\r\n\r\n## Rest service layer with Spring Boot Mvc\r\n\r\nIf you want to access to Rest Service with Spring boot module \"spring-boot-mvc\" first run mvn spring-boot:run (if you want to use Gradle run \"gradle bootRun\"\r\n into spring-boot-mvc-rest folder ):\r\n\r\n```\r\n- http://localhost:9090/base (get list of all bases)\r\n- http://localhost:9090/base/1 (get base info with id=1)\r\n- http://localhost:9090/base/1 (delete base info with id=1)\r\n- http://localhost:9090/base (post create new base sending json info. Example \"name\":\"rolling pizza\" )\r\n- http://localhost:9090/base (update update existing base sending json info. Example {\"name\":\"rolling pizza 2\",\"id\":1})\r\n```\r\n\r\nWhen you run Spring boot app Spring actuator add features to monitore your services:\r\n\r\n```\r\n- (get) http://localhost:9091/manage/metrics (Spring Boot Actuator includes a metrics service with \r\n“gauge” and “counter” support. A “gauge” records a single value; and a “counter” records a delta \r\n(an increment or decrement). Metrics for all HTTP requests are automatically \r\nrecorded, so if you hit the metrics endpoint should see a sensible response.)\r\n- (get) http://localhost:9091/manage/health (you can check if your app is available)\r\n- (get) http://localhost:9091/manage/mappings (list of your app HTTP endpoints)\r\n- (post) http://localhost:9091/manage/shutdown (list of your app HTTP endpoints)\r\n```\r\n\r\n![Spring Actuator values](/images/Spring_Actuator_EndPoints.png?raw=true \"Spring Actuator values\")\r\n\r\n\r\nMore info about Spring Actuator at: [Spring Actuator](https://github.com/spring-projects/spring-boot/tree/master/spring-boot-actuator \"Spring Actuator\")\r\n\r\n\r\n##  Rest service layer with Spring Data Rest\r\n\r\nSpring Data REST builds on top of Spring Data repositories, analyzes your application’s domain model and exposes hypermedia-driven HTTP resources for aggregates contained in the model.\r\n\r\nIf you want to access to Rest Service with Spring boot module \"spring-boot-data-rest\" first run mvn spring-boot:run (if you want to use Gradle run \"gradle bootRun\"\r\n into spring-boot-data-rest):\r\n\r\n```\r\n- http://localhost:9090/api/bases to get all bases (get list of all bases)\r\n- http://localhost:9090/api/bases (post create new base sending json info. Example \"name\":\"rolling pizza\" )\r\n- http://localhost:9090/api/browser/index.html#/api to access to your rest api HAL Browser to be served up when you visit your application’s root URI in a browser. \r\n```\r\n\r\n![Spring Actuator values](/images/SpringDataRestHalBrowser.png?raw=true \"Spring Actuator values\")\r\n\r\n\r\nMore info about Spring Data Rest at: [Spring Data Rest](http://projects.spring.io/spring-data-rest/ \"Spring Data Rest\") \r\n\r\n## Jenkins 2 support with jenkins file\r\n\r\nJenkins 2 automatic multibranch plugin mode with JenkinsFile file in main directory. More interesting information about new Jenkins 2 Pipeline script configuration at:\r\n\r\n-  [DZONE refcard jenkins pipeline](https://dzone.com/refcardz/continuous-delivery-with-jenkins-workflow \"DZONE refcard jenkins pipeline\")\r\n-  [Github examples](https://github.com/jenkinsci/pipeline-examples \"Github examples\")  \r\n\r\nDocker integration in feature  branch called: docker_container_jenkins\r\n\r\n-  [Docker container feature branch](https://github.com/cristianprofile/spring-boot-mvc-complete-example/blob/feature/docker_container_jenkins/Jenkinsfile \"Run IC in a Docker container\")  \r\n\r\n![Pipeline plugin](/images/git-flow.png?raw=true \"Pipeline plugin\")\r\n\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}